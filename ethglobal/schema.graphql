type ActivityAdded @entity(immutable: true) {
  id: Bytes!
  userAddress: Bytes! # address
  activityId: String! # string
  timestamp: BigInt! # uint256
  totalActivities: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Approval @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  approved: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ApprovalForAll @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  operator: Bytes! # address
  approved: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type BotCreated @entity(immutable: true) {
  id: Bytes!
  botName: String! # string
  systemPrompt: String! # string
  botDescription: String! # string
  deploymentURL: String! # string
  unlockCostInGWei: Int! # uint16
  timestamp: BigInt! # uint256
  totalBots: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type BotPurchased @entity(immutable: true) {
  id: Bytes!
  userAddress: Bytes! # address
  botName: String! # string
  messagesId: Int! # uint16
  costPaid: BigInt! # uint256
  timestamp: BigInt! # uint256
  totalBotsPurchased: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CommunityGoalAdded @entity(immutable: true) {
  id: Bytes!
  userAddress: Bytes! # address
  communityName: String! # string
  goalId: String! # string
  timestamp: BigInt! # uint256
  totalGoalsOfCommunity: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CommunityRoomCreated @entity(immutable: true) {
  id: Bytes!
  communityName: String! # string
  creator: Bytes! # address
  botName: String! # string
  messagesId: Int! # uint16
  timestamp: BigInt! # uint256
  totalCommunities: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CommunityRoomJoined @entity(immutable: true) {
  id: Bytes!
  userAddress: Bytes! # address
  communityName: String! # string
  timestamp: BigInt! # uint256
  totalMembers: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type GoalAdded @entity(immutable: true) {
  id: Bytes!
  userAddress: Bytes! # address
  goalId: String! # string
  goalType: String! # string
  timestamp: BigInt! # uint256
  totalGoalsOfType: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type InjuryUpdated @entity(immutable: true) {
  id: Bytes!
  userAddress: Bytes! # address
  oldInjuryId: String! # string
  newInjuryId: String! # string
  timestamp: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type NFTMinted @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  tokenId: BigInt! # uint256
  uri: String! # string
  timestamp: BigInt! # uint256
  totalNFTsForUser: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Transfer @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  to: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UserRegistered @entity(immutable: true) {
  id: Bytes!
  userAddress: Bytes! # address
  metadata: String! # string
  timestamp: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

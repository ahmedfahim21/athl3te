type ActivityAdded @entity(immutable: true) {
  id: Bytes!
  userAddress: Bytes! # address
  activityId: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type BotCreated @entity(immutable: true) {
  id: Bytes!
  botName: String! # string
  deploymentURL: String! # string
  unlockCostInGWei: Int! # uint16
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type BotPurchased @entity(immutable: true) {
  id: Bytes!
  userAddress: Bytes! # address
  botName: String! # string
  messagesId: Int! # uint16
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CommunityRoomCreated @entity(immutable: true) {
  id: Bytes!
  communityName: String! # string
  creator: Bytes! # address
  botName: String! # string
  messagesId: Int! # uint16
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CommunityRoomJoined @entity(immutable: true) {
  id: Bytes!
  userAddress: Bytes! # address
  communityName: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type InjuryUpdated @entity(immutable: true) {
  id: Bytes!
  userAddress: Bytes! # address
  injuryId: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type NutritionGoalAdded @entity(immutable: true) {
  id: Bytes!
  userAddress: Bytes! # address
  goalId: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SportGoalAdded @entity(immutable: true) {
  id: Bytes!
  userAddress: Bytes! # address
  goalId: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UserRegistered @entity(immutable: true) {
  id: Bytes!
  userAddress: Bytes! # address
  metadata: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
type Approval @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  approved: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ApprovalForAll @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  operator: Bytes! # address
  approved: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Minted @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  tokenId: BigInt! # uint256
  tokenURI: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TokenURIUpdated @entity(immutable: true) {
  id: Bytes!
  tokenId: BigInt! # uint256
  newTokenURI: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Transfer @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  to: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
